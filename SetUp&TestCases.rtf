{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fswiss\fcharset0 Helvetica;\f2\froman\fcharset0 TimesNewRomanPS-BoldMT;
\f3\ftech\fcharset77 Symbol;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green100\blue38;\red32\green32\blue32;
\red153\green168\blue186;\red86\green132\blue173;\red153\green200\blue122;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c80000\c47059\c19608;\cssrgb\c16863\c16863\c16863;
\cssrgb\c66275\c71765\c77647;\cssrgb\c40784\c59216\c73333;\cssrgb\c65882\c81569\c55294;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qc\partightenfactor0

\f0\fs58\fsmilli29333 \cf2 \expnd0\expndtw0\kerning0
Morris Variant
\f1\fs32 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Project Setup:
\f1 \

\f0 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\f2\b \ul Using IDE:
\f1\b0 \ulnone \
\pard\pardeftab720\li960\fi-480\partightenfactor0

\f3 \cf2 \'e1
\f0\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0 
\fs32 Keep all the files in a single folder along with input files. Make sure that 
\f2\b HelperClass.java
\f0\b0  is present.
\f1 \

\f3 \'e1
\f0\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0 
\fs32 Run each program in an IDE with run arguments as: 
\f2\b \'a0<Input File Path> <Output File Path> <Depth>
\f1\b0 \
\pard\pardeftab720\li960\partightenfactor0

\f2\b \cf2 \'a0
\f1\b0 \
\pard\pardeftab720\li960\partightenfactor0

\f2\b \cf2 \ul \ulc2 Using Command Line:
\f1\b0 \ulnone \
\pard\pardeftab720\li960\fi-480\partightenfactor0

\f3 \cf2 \'e1
\f0\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0 
\fs32 Change current directory to this folder.
\f1 \

\f3 \'e1
\f0\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0 
\fs32 Compile: javac cur_dir/*.java
\f1 \

\f3 \'e1
\f0\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0 
\fs32 Run:\'a0 java cur_dir /
\f2\b MiniMaxOpening
\f0\b0  
\f2\b <Input File Path> <Output File Path> <Depth>
\f1\b0 \
\pard\pardeftab720\li960\partightenfactor0

\f0 \cf2 \'a0
\f1 \

\f0 \'a0
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\li960\qc\partightenfactor0

\f2\b\fs37\fsmilli18667 \cf2 Test Cases for AB Savings
\f1\b0\fs32 \
\pard\pardeftab720\li960\partightenfactor0

\f0 \cf2 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1.MiniMaxOpening\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWWBBBBxxBWBxB Depth : 5
\f1 \

\f0 Output Board Position : WWWxxxxWWWWBBxBxxBWBxB
\f1 \

\f0 Positions evaluated by static estimation : 841327
\f1 \

\f0 MINMAX Estimate : 2
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1.ABOpening\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWWBBBBxxBWBxB Depth : 5
\f1 \

\f0 Output Board Position : WWWxxxxWWWWBBxBxxBWBxB
\f1 \

\f0 Positions evaluated by static estimation : 9812
\f1 \

\f0 MINMAX Estimate : 2
\f1 \

\f0 \'a0
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 2.MiniMaxOpening\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWBBBxBxxBWBBB Depth : 3
\f1 \

\f0 Output Board Position : WWWxxxxWWWBBBxBxxBWBBB
\f1 \

\f0 Positions evaluated by static estimation : 637
\f1 \

\f0 MINMAX Estimate : -1
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 2.ABOpening\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWBBBxBxxBWBBB Depth : 3
\f1 \

\f0 Output Board Position : WWWxxxxWWWBBBxBxxBWBBB
\f1 \

\f0 Positions evaluated by static estimation : 67
\f1 \

\f0 MINMAX Estimate : -1
\f1 \

\f0 \'a0
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b\fs37\fsmilli18667 \cf2 We can observe that ABOpening is evaluating less number of positions when compared to MiniMaxOpening.
\f1\b0\fs32 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \'a0
\f1\b0 \

\f2\b \'a0
\f1\b0 \

\f2\b \ul 1.MiniMaxGame:
\f1\b0 \ulnone \

\f2\b \ul \'a0
\f1\b0 \ulnone \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWWBBBBxxBWBxB Depth : 2
\f1 \

\f0 Output Board Position : WWxxxxxWWWWBBBBWxxxBxB
\f1 \

\f0 Positions evaluated by static estimation : 410
\f1 \

\f0 MINMAX Estimate : 981
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1.ABGame:
\f1\b0 \ulnone \

\f2\b \ul \'a0
\f1\b0 \ulnone \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWWBBBBxxBWBxB Depth : 2
\f1 \

\f0 Output Board Position : WWxxxxxWWWWBBBBWxxxBxB
\f1 \

\f0 Positions evaluated by static estimation : 355
\f1 \

\f0 MINMAX Estimate : 981
\f1 \

\f0 \'a0
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 2.MiniMaxGame:
\f1\b0 \ulnone \

\f2\b \ul \'a0
\f1\b0 \ulnone \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWBBBxBxxBWBBB Depth : 3
\f1 \

\f0 Output Board Position : WWxWxxxWxWBBBxBxxBWBBB
\f1 \

\f0 Positions evaluated by static estimation : 755
\f1 \

\f0 MINMAX Estimate : -1009
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 2.ABGame:
\f1\b0 \ulnone \

\f2\b \ul \'a0
\f1\b0 \ulnone \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : WWxxxxxWWWBBBxBxxBWBBB Depth : 3
\f1 \

\f0 Output Board Position : WWxWxxxWxWBBBxBxxBWBBB
\f1 \

\f0 Positions evaluated by static estimation : 343
\f1 \

\f0 MINMAX Estimate : -1009
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b\fs37\fsmilli18667 \cf2 We can observe that ABGame is evaluating less number of positions when compared to MiniMaxGame.
\f1\b0\fs32 \

\f2\b\fs37\fsmilli18667 \'a0
\f1\b0\fs32 \

\f2\b\fs37\fsmilli18667 \'a0
\f1\b0\fs32 \
\pard\pardeftab720\li960\qc\partightenfactor0

\f2\b\fs37\fsmilli18667 \cf2 Improved Static Estimation
\f1\b0\fs32 \

\f2\b\fs37\fsmilli18667 \'a0
\f1\b0\fs32 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Let's define:
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfWhites = the number of white pieces on the board
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfWhites = the number of black pieces on the board
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 numWhitePiecesAtRisk = the number of white pieces at risk of being removed if black makes a mill
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 numBlackPiecesAtRisk = = the number of black pieces at risk of being removed if white makes a mill
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfWhtMillPcs = the number of white pieces that are part of a mill
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfBlcMillPcs = the number of black pieces that are part of a mill
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfWhiteMoves = the number of legal moves available to white
\f1 \

\f0 \'95
\fs18\fsmilli9333 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 
\fs32 noOfBlackMoves = the number of legal moves available to black
\f1 \

\f0 \'a0
\f1 \

\f0 Improved Static Estimate Function:
\f1 \
\pard\pardeftab720\partightenfactor0

\f0\fs26\fsmilli13333 \cf3 \cb4 int \cf5 score = \cf6 100 \cf5 * (noOfWhites - noOfBlacks) + \cf6 100 \cf5 * (noOfWhiteMoves - noOfBlackMoves) + \cf6 50 \cf5 * (noOfWhtMillPcs - noOfBlcMillPcs) - \cf6 10 \cf5 * (numWhitePiecesAtRisk - numBlackPiecesAtRisk)\cf3 ;\cb1 \uc0\u8232 \cb4 if \cf5 (noOfBlacks <= \cf6 2\cf5 ) \cf3 return \cf6 10000\cf3 ;\cb1 \uc0\u8232 \cb4 else if \cf5 (noOfWhites <= \cf6 2\cf5 ) \cf3 return \cf5 -\cf6 10000\cf3 ;\cb1 \uc0\u8232 \cb4 else if \cf5 (noOfBlackMoves == \cf6 0\cf5 ) \cf3 return \cf6 10000\cf3 ;\cb1 \uc0\u8232 \cb4 else return \cf5 score\cf3 ;
\f1\fs32 \cf2 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 \cb1 \'a0
\f1 \

\f0 The improved static estimate function consider various other factors like number of white moves, number of white/black pieces in mills , number of white/black pieces at risk of being removed if the opponents makes a mill inaddition to the given number of white/black pieces and number of black moves. Hence it gives better moves than the given simple function.
\f1 \
\pard\pardeftab720\li960\partightenfactor0

\f0 \cf2 \'a0
\f1 \
\pard\pardeftab720\li960\qc\partightenfactor0

\f2\b\fs37\fsmilli18667 \cf2 Test Cases for Improved Static Estimation
\f1\b0\fs32 \
\pard\pardeftab720\li960\partightenfactor0

\f0 \cf2 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1.MiniMaxOpening\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : BWBWWWBBxWxxxBWxWxxBBW Depth : 4
\f1 \

\f0 Output Board Position : xWBWWWBBWWxxxBWxWxxBBW
\f1 \

\f0 Positions evaluated by static estimation : 5046
\f1 \

\f0 MINMAX Estimate : 2
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1. MiniMaxOpeningImproved\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : BWBWWWBBxWxxxBWxWxxBBW Depth : 4
\f1 \

\f0 Output Board Position : BWB\cb7 W\cb1 W\cb7 W\cb1 BB\cb7 x\cb1 Wx\cb7 x\cb1 xBWx\cb7 WxW\cb1 BBW
\f1 \

\f0 Positions evaluated by static estimation : 5046
\f1 \

\f0 MINMAX Estimate : 2270
\f1 \

\f0 \'a0
\f1 \

\f0 We can see that the Improved program gives a better step for future where we can form 3 mills in the next step where as the normal program just forms a mill and removes a black piece which can\'92t be the best move considering next steps.
\f1 \

\f0 \'a0
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul 1.MiniMaxGame\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : xWBWWWBBWWxxxBWxWxxBBW Depth : 2
\f1 \

\f0 Output Board Position : WxBWWWBBWWxxxBWxWxxBBW
\f1 \

\f0 Positions evaluated by static estimation : 37
\f1 \

\f0 MINMAX Estimate : 2993
\f1 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \ul \'a0
\f1\b0 \ulnone \

\f2\b \ul 1. MiniMaxGameImproved\ulnone :
\f1\b0 \

\f2\b \'a0
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 Input Board Position : xWBWWWBBWWxxxBWxWxxBBW Depth : 2
\f1 \

\f0 Output Board Position : xWBWWWBBWWxxxBxxW\cb7 Wx\cb1 BBW
\f1 \

\f0 Positions evaluated by static estimation : 37
\f1 \

\f0 MINMAX Estimate : 1170
\f1 \

\f0 \'a0
\f1 \

\f0 We can see that the Improved Game produced a better step than the normal program as we can create a mill by moving W in 6g to 5f in next step where as there is no way to create a mill in normal program in future.
\f1 \

\f0 \'a0
\f1 \
}